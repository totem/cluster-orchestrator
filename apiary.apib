FORMAT: 1A

# cluster-orchestrator
API for orchestrator used in totem v2.

# Orchestrator Hooks

## Generic Internal Hook [POST /hooks/generic]
API for posting custom callback hook to internal orchestrator api. 

*Note:*  Orchestrator does not clone the repository and simply use git information
as meta-information for locating totem.yml. This file need not be present in git repository and can be stored in other config providers like s3, etcd.

+ Request

    + Headers
            
            Content-Type: application/vnd.orch.generic.hook.v1+json
            Accept: application/vnd.orch.task.v1+json, application/json
            
    + Schema

            {
              "$schema": "http://json-schema.org/draft-04/hyper-schema#",
              "type": "object",
              "title": "Schema for Generic Hook payload",
              "id": "#generic-hook-v1",
              "properties": {
                "git": {
                  "description": "Git meta-information used for locating totem.yml."
                  "$ref": "#/definitions/git"
                },
                "name": {
                  "description": "Name of the hook (e.g. image-factory)",
                  "type": "string",
                  "maxLength": 100
                },
                "type": {
                  "description": "Type of the hook (e.g. builder, ci)",
                  "enum": ["builder", "ci", "scm-create", "scm-push"]
                },
                "status": {
                  "description": "Status for the hook (failed, success)",
                  "enum": ["success", "failed"]
                },
                "result": {
                  "description": "Result object",
                  "type": "object"
                },
                "force-deploy": {
                  "description": "Force deploy the image on receiving this hook (ignore status)",
                  "type": "boolean"
                }
              },
              "additionalProperties": false,
              "required": ["name", "type", "git"],
              "definitions": {
                "git": {
                  "properties": {
                    "owner": {
                      "title": "Owner/Organization of the SCM repository (e.g. totem)",
                      "type": "string",
                      "maxLength": 100
                    },
                    "repo": {
                      "title": "SCM repository name (e.g.: spec-python)",
                      "type": "string",
                      "maxLength": 100
                    },
                    "ref": {
                      "title": "Branch or tag name",
                      "type": "string",
                      "maxLength": 100
                    },
                    "commit": {
                      "title": "Git SHA Commit ID",
                      "type": ["string", "null"],
                      "maxLength": 100
                    }
                  },
                  "additionalProperties": false,
                  "required": ["owner", "repo", "ref"]
                }
              }
            }
    
    + Body
    
            {
                "git":{
                    "owner": "totem",
                    "repo": "totem-demo",
                    "ref": "master",
                    "commit": "75863c8b181c00a6e0f70ed3a876edc1b3a6a662"
                },
                "type": "builder",
                "name": "mybuilder",
                "status": "success",
                "force-deploy": true,
                "result": {
                  "image": "totem/totem-demo"
                }
            }
            
    
+ Response 202 (application/vnd.orch.task.v1+json)

    + Body
    
            {
                "task_id": "81b5de1c-a7af-4bc2-9593-644645f655bc"
            }
